services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
      args:
        - JWT_SECRET
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME} # Default database's name
      PGDATA: /data/postgres
      PGUSER: web_anon
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./scripting/init.sh:/docker-entrypoint-initdb.d/init.sh # Create the schemas, the custom views and the web_anon role
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Creates the postgrest schema
      - db_data:/data/postgres
    networks:
      - backend
    restart: always


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    profiles:
      - tool
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - backend

  server:
    image: postgrest/postgrest
    container_name: prest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://authenticator:${JWT_SECRET}@db:5432/${POSTGRES_DB_NAME} #The authenticator roles has the JWT_SECRET as password (set in init.sh)
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_PRE_CONFIG: postgrest.pre_config
    depends_on:
      - db
    networks:
      - backend
    restart: always

volumes:
  db_data:
    name: db-data
    driver: local

networks:
  backend:
    name: backend
